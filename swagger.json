{
    "swagger": "2.0",
    "info":{
        "description": "Patronative registration API",
        "version": "1.0.0",
        "title": "Patronative"
    },
    "basePath": "/api",
    "tags": [
        {
            "name": "user",
            "description": "Endpoints related to user registration"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Creates entry for user in database",
                "consumes": "application/json",
                "responses":{
                    "200":{
                        "description": "Success"
                    },
                    "500":{
                        "description": "Error"
                    }
                },
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"User object",
                        "required": "true",
                        "schema":{
                            "$ref": "#/definitions/User"
                        }
                    }
                ]
            }
        },
        "/activate": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary":"Activates user account",
                "consumes": "application/json",
                "responses": {
                    "200": {
                        "description": "Activation succeeded"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "409": {
                        "description": "Wrong code or user already active"
                    },
                    "500": {
                        "description": "Unspecified error"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User activation data",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/activationData"
                        }
                    }
                ]
            }
        },
        "/list?active=true": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary":"Shows list of users",
                "consumes": "application/json",
                "responses": {
                    "200": {
                        "description": "getting list succeeded"
                    },
                    "500": {
                        "description": "Unspecified error"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "description": "Show only active users",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ]

            }
        }
    },
    "definitions":{
        "User": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "email",
                "phone",
                "technologies",
                "login",
                "githubLink",
                "password"
            ],
            "properties":{
                "firstName": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z]+$",
                    "errorMessage": {
                        "maxLength": "Imię jest za długie",
                        "minLength": "Imię musi mieć co najmniej 2 znaki",
                        "pattern": "Imię może zawierać jedynie litery"
                    }
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z]+$",
                    "errorMessage": {
                        "maxLength": "Nazwisko jest za długie",
                        "minLength": "Nazwisko musi mieć co najmniej 2 znaki",
                        "pattern": "Nazwisko może zawierać jedynie litery"
                    }
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "errorMessage": {
                        "format": "Niepoprawny email"
                    }
                },
                "login": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9]+$",
                    "errorMessage": {
                        "maxLength": "Login może składać się z maksymalnie 15 znaków",
                        "minLength": "Login musi składać się z co najmniej 2 znaków",
                        "pattern": "Login może zawierać jedynie litery i cyfry"
                    }
                },
                "phone":{
                    "type": "integer",
                    "minimum": 100000000,
                    "maximum": 999999999,
                    "errorMessage": {
                        "type": "Numer powinien składać się wyłącznie z cyfr",
                        "minimum": "Numer jest za krótki",
                        "maximum": "Numer jest za długi"
                    }
                },
                "technologies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "JS",
                            "Java",
                            "QA",
                            "Mobile"
                        ],
                        "errorMessage": {
                            "enum": "Niedozwolona wartość"
                        }
                    },
                    "minItems": 1,
                    "maxItems": 3,
                    "errorMessage": {
                        "minItems": "Proszę wybrać conajmniej jedną technologię",
                        "maxItems": "Proszę wybrać maksymanie trzy technologie"
                    }
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "pattern": "^(?=.*[!@#$%^&*()-+])(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])",
                    "errorMessage": {
                        "maxLength": "Hasło może składać się z maksymalnie 20 znaków",
                        "minLength": "Hasło musi składać się z co najmniej ośmiu znaków",
                        "pattern": "Hasło musi zawierać przynajmniej jedną dużą literę, jedną małą literę, jedną cyfrę i jeden znak specjalny"
                    }
                },
                "activationCode": {
                    "type": "integer",
                    "minimum": 10000000,
                    "maximum": 99999999
                },
                "active": {
                    "type": "boolean",
                    "default": "false"
                },
                "githubLink": {
                    "type": "string",
                    "pattern": "^((https?):\/\/)?(www.)?github.com\/[a-zA-Z0-9](?:[a-zA-Z0-9]|-(?=[a-zA-Z0-9])){0,38}$",
                    "errorMessage": {
                        "pattern": "Niepoprawny link"
                    }
                }
            },
            "errorMessage": {
                "required": {
                    "firstName": "Imie jest wymagane",
                    "lastName": "Nazwisko jest wymagane",
                    "email": "Email jest wymagany",
                    "phone": "Numer telefonu jest wymagany",
                    "technologies": "Proszę wybrać conajmniej jedną technologię",
                    "login": "Login jest wymagany",
                    "githubLink": "Link do github jest wymagany",
                    "password" : "Hasło jest wymagane"
                }

            }
        },
        "activationData": {
            "type": "object",
            "required": [
                "email",
                "activationCode"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "errorMessage": {
                        "format": "Niepoprawny email"
                    }
                },
                "activationCode": {
                    "type": "integer",
                    "minimum": 10000000,
                    "maximum": 99999999,
                    "errorMessage": {
                        "minimum": "Kod jest za krótki",
                        "maximum": "Kod jest za długi"
                    }
                }
            },
            "errorMessage": {
                "required": {
                    "email": "Email jest wymagany",
                    "activationCode": "Kod aktywacyjny jest wymagany"
                }
            }
        }
    }
}